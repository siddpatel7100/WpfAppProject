#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="warehousedb")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInsertStock(InsertStock instance);
    partial void UpdateInsertStock(InsertStock instance);
    partial void DeleteInsertStock(InsertStock instance);
    partial void Insertlogin(login instance);
    partial void Updatelogin(login instance);
    partial void Deletelogin(login instance);
    partial void InsertWithdrawItemTable(WithdrawItemTable instance);
    partial void UpdateWithdrawItemTable(WithdrawItemTable instance);
    partial void DeleteWithdrawItemTable(WithdrawItemTable instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WpfApp2.Properties.Settings.Default.warehousedbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InsertStock> InsertStocks
		{
			get
			{
				return this.GetTable<InsertStock>();
			}
		}
		
		public System.Data.Linq.Table<login> logins
		{
			get
			{
				return this.GetTable<login>();
			}
		}
		
		public System.Data.Linq.Table<WithdrawItemTable> WithdrawItemTables
		{
			get
			{
				return this.GetTable<WithdrawItemTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InsertStock")]
	public partial class InsertStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _itemNumber;
		
		private string _itemType;
		
		private string _itemName;
		
		private string _itemQuantity;
		
		private string _shipmentRecieved;
		
		private string _dName;
		
		private string _dEmail;
		
		private string _dPhone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnitemNumberChanging(int value);
    partial void OnitemNumberChanged();
    partial void OnitemTypeChanging(string value);
    partial void OnitemTypeChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OnitemQuantityChanging(string value);
    partial void OnitemQuantityChanged();
    partial void OnshipmentRecievedChanging(string value);
    partial void OnshipmentRecievedChanged();
    partial void OndNameChanging(string value);
    partial void OndNameChanged();
    partial void OndEmailChanging(string value);
    partial void OndEmailChanged();
    partial void OndPhoneChanging(string value);
    partial void OndPhoneChanged();
    #endregion
		
		public InsertStock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemNumber", DbType="Int NOT NULL")]
		public int itemNumber
		{
			get
			{
				return this._itemNumber;
			}
			set
			{
				if ((this._itemNumber != value))
				{
					this.OnitemNumberChanging(value);
					this.SendPropertyChanging();
					this._itemNumber = value;
					this.SendPropertyChanged("itemNumber");
					this.OnitemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemType", DbType="NVarChar(50)")]
		public string itemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnitemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("itemType");
					this.OnitemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(50)")]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemQuantity", DbType="NVarChar(50)")]
		public string itemQuantity
		{
			get
			{
				return this._itemQuantity;
			}
			set
			{
				if ((this._itemQuantity != value))
				{
					this.OnitemQuantityChanging(value);
					this.SendPropertyChanging();
					this._itemQuantity = value;
					this.SendPropertyChanged("itemQuantity");
					this.OnitemQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipmentRecieved", DbType="NVarChar(50)")]
		public string shipmentRecieved
		{
			get
			{
				return this._shipmentRecieved;
			}
			set
			{
				if ((this._shipmentRecieved != value))
				{
					this.OnshipmentRecievedChanging(value);
					this.SendPropertyChanging();
					this._shipmentRecieved = value;
					this.SendPropertyChanged("shipmentRecieved");
					this.OnshipmentRecievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dName", DbType="NVarChar(50)")]
		public string dName
		{
			get
			{
				return this._dName;
			}
			set
			{
				if ((this._dName != value))
				{
					this.OndNameChanging(value);
					this.SendPropertyChanging();
					this._dName = value;
					this.SendPropertyChanged("dName");
					this.OndNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEmail", DbType="NVarChar(50)")]
		public string dEmail
		{
			get
			{
				return this._dEmail;
			}
			set
			{
				if ((this._dEmail != value))
				{
					this.OndEmailChanging(value);
					this.SendPropertyChanging();
					this._dEmail = value;
					this.SendPropertyChanged("dEmail");
					this.OndEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPhone", DbType="NVarChar(50)")]
		public string dPhone
		{
			get
			{
				return this._dPhone;
			}
			set
			{
				if ((this._dPhone != value))
				{
					this.OndPhoneChanging(value);
					this.SendPropertyChanging();
					this._dPhone = value;
					this.SendPropertyChanged("dPhone");
					this.OndPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.login")]
	public partial class login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _username;
		
		private string _password;
		
		private string _type;
		
		private string _email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WithdrawItemTable")]
	public partial class WithdrawItemTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _itemType;
		
		private string _itemName;
		
		private string _oldQuantity;
		
		private string _quantityWithdraw;
		
		private string _updateQuantity;
		
		private string _empName;
		
		private System.Nullable<System.DateTime> _datetime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnitemTypeChanging(string value);
    partial void OnitemTypeChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OnoldQuantityChanging(string value);
    partial void OnoldQuantityChanged();
    partial void OnquantityWithdrawChanging(string value);
    partial void OnquantityWithdrawChanged();
    partial void OnupdateQuantityChanging(string value);
    partial void OnupdateQuantityChanged();
    partial void OnempNameChanging(string value);
    partial void OnempNameChanged();
    partial void OndatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OndatetimeChanged();
    #endregion
		
		public WithdrawItemTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemType", DbType="NVarChar(50)")]
		public string itemType
		{
			get
			{
				return this._itemType;
			}
			set
			{
				if ((this._itemType != value))
				{
					this.OnitemTypeChanging(value);
					this.SendPropertyChanging();
					this._itemType = value;
					this.SendPropertyChanged("itemType");
					this.OnitemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(50)")]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldQuantity", DbType="NVarChar(50)")]
		public string oldQuantity
		{
			get
			{
				return this._oldQuantity;
			}
			set
			{
				if ((this._oldQuantity != value))
				{
					this.OnoldQuantityChanging(value);
					this.SendPropertyChanging();
					this._oldQuantity = value;
					this.SendPropertyChanged("oldQuantity");
					this.OnoldQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantityWithdraw", DbType="NVarChar(50)")]
		public string quantityWithdraw
		{
			get
			{
				return this._quantityWithdraw;
			}
			set
			{
				if ((this._quantityWithdraw != value))
				{
					this.OnquantityWithdrawChanging(value);
					this.SendPropertyChanging();
					this._quantityWithdraw = value;
					this.SendPropertyChanged("quantityWithdraw");
					this.OnquantityWithdrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updateQuantity", DbType="NVarChar(50)")]
		public string updateQuantity
		{
			get
			{
				return this._updateQuantity;
			}
			set
			{
				if ((this._updateQuantity != value))
				{
					this.OnupdateQuantityChanging(value);
					this.SendPropertyChanging();
					this._updateQuantity = value;
					this.SendPropertyChanged("updateQuantity");
					this.OnupdateQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empName", DbType="NVarChar(50)")]
		public string empName
		{
			get
			{
				return this._empName;
			}
			set
			{
				if ((this._empName != value))
				{
					this.OnempNameChanging(value);
					this.SendPropertyChanging();
					this._empName = value;
					this.SendPropertyChanged("empName");
					this.OnempNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
